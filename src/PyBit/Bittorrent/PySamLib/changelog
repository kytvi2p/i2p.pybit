0.2.1 - 23.02.2009
-----------------------
Blub:
- fixed bug in "SamTcpDestination": All i2pSockets were failed when a destination failed but failing an already failed socket crashes
- fixed bug in "SamExtendedDestination": multiple simultaneous lookups of the same name were incorrectly handled (the callback arguments and keywords were not stored correctly)


0.2.0 - 22.02.2009
-----------------------
Blub:
- restructured the entire library to be less monolithic but more spread out over different classes, so that it is easier to maintain and to extend; cleaned up the code and interface in the process
- did not backwards compatible API changes! (mostly renames but the behaviour and keywords of a few functions did change)
- massive rename: renamed "SamSocketManager" to "I2PSocketManager", "SamPoll" to "I2PPoll", "SamSocket" to "I2PSocket"; replaced "Sam" in funtion names of these classes with "I2P" (PySamLib may support other protocols like BOB in the future, in that case "Sam" in the function names would be misleading)
- added "AsyncSocket": a wrapper class for "AsyncSocketManager" which emulates (parts of) the socket interface 
- added "I2PSocketStatus": stores which i2pSocket may recv or send and which ones failed
- added "RealSocketStatus": stores which async socket wants to recv, send, ...
- added "SamDestination.py": includes five different classes, one for each sam destination type (raw, udp and tcp), which each represent one sam destination of their type per instance, and two base classes used for inheriting
- added "SamSocket.py": includes "SamTcpSocket", a class which represents a single sam tcp stream per instance, and "SamTcpListeningSocket", which represents one listening tcp socket per instance (virtual, the sam bridge doesn't know about this socket)
- improved "SamMessages.py": added nameLookup() which creates a name lookup message
- added support for automatic name resolution: If connect() is not given a full i2p destination but a i2p name ("*.i2p" or "*.b32.i2p", but it will try to resolve anything which is not 516 chars long or which doesn't end with "AAAA"), then PySamLib tries to resolve the name using the sam bridge. If resolving the name fails then the socket fails, if it succeeds then the result is used as the connect target.


0.1.5 - 07.02.2009
-----------------------
Blub:
- added function "changeSamBridgeAddress()" which changes the ip address and port of a destination
- added function "changeDestinationName()" which changes the name of a destination (the name which is displayed on the router console)


0.1.4 - 28.01.2009
-----------------------
Blub:
- added functions to get the amount of currently available bytes in the recv buffer of a sam tcp socket
- fixed bug which prevented the removal of internal data structures for some closed sockets
- added shutdown() function, which guarantees that the main-loop thread dies before the function returns, to SamSocketManager and AsyncSocketManager
- SamSocket doesn't try to get its own i2p destination already in the constructor but only if needed


0.1.3 - 25.12.2008
-----------------------
Blub:
- added another implementation of AsyncSocketManager which is based on poll instead of select; the poll-based one is preffered and automatically used if poll is available (poll is available on Unix-like systems but not on Windows)
- fixed bug in AsyncSocketManager which occured if an existing working connection got added (not done by this lib, so this bug didn't happen)


0.1.2 - 21.09.2008
-----------------------
Blub:
- added logging of thread starts and stops
- increased select timeout to one second


0.1.1 - 06.09.2008
-----------------------
Blub:
- AsyncSocketManager now returns a unique id for each socket (instead of the descriptor number of the real socket)
- prepared support for changing the max buffer size of existing AsyncSocketManager sockets (the actual changing is not yet implemented)
- renamed two SamSocketManager functions, more consistent that way:
  getFreeOutBufferSpace -> getSamSocketFreeOutBufferSpace
  getRemoteDestination -> getSamSocketRemoteDestination
- added function "getSamSocketErrorReason" which returns why a certain sam tcp socket failed (or None if the socket didn't fail)
- added recv limit threshold setting: Can be set for each sam tcp socket; SamSocketManager waits until the recv limit increases more than the set threshold before sending a new receive limit to the SAM bridge, should reduce overhead if data is received in very small chunks; defaults to half of the inbound buffer size


0.1.0 - 24.08.2008
-----------------------
Blub:
- added support for setting a default queue size for incomming sam connections
- added support for changing the session options of an existing sam destination
- added wrapper class which emulates the poll interface (SamPoll, SamSocket.py)
- added wrapper class which is similiar to the socket interface (SamSocket, SamSocket.py)
- the accept() function of SamSocketManager now returns a list of tuples of (socketNumber, remoteDestination)
- sockets, which are not valid and in the errorInterest parameter, will be returned in the error set by the SamSocketManager select call


0.0.4 - 17.08.2008
-----------------------
Blub:
- handle failed stream sends; they shouldn't happen because the lib keeps track of sams buffer status, but once in a while they do, probably in border cases (connection fails a short moment before we try to send for example)
- fixed bug: the "peekOnly" flag of the recv function was not considered when deciding if a sam tcp socket remains receivable
- fixed bug: in certain cases messages which were received from the sam bridge were duplicated or ignored


0.0.3 - 16.08.2008
-----------------------
Blub:
- fixed mayor bug in the send code for sam tcp sockets: sometimes the send buffer didn't get emptied and messages were send twice!


0.0.2 - 14.08.2008
-----------------------
Blub:
- if a tcp destination is removed, all existing sam tcp sockets of that destination are failed instead of closed, cleaner that way
- don't close a sam tcp socket if it has something in its outbuffer, instead wait until the outbuffer is empty and then close it (immediate close can be forced)


0.0.1 - 13.08.2008
-----------------------
Blub:
- initial version
