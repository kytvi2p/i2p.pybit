General
-----------------------
- cleanup log messages
- add a few more tabs (logs, ...)
- add support for bob and/or SAMv3
- webinterface (with support to only start the webinterface = headless mode)
- improve peer handling (for example reconnect to known seeds if we switch from seed to leech when another file gets selected for download)


Classes
-----------------------

Bittorrent.Bt:
- report status changes (loading/running/completed/error) back to MultiBt (for status changes and such)

Bittorrent.ConnectionBuilder:
- maximum connection limit per torrent, calculated from a global limit (and shared, like the bandwidth limit)

Bittorrent.ConnectionHandler:
- send "completed" event to tracker, once we completed a torrent (execute callback, probably some function in Bittorrent.Bt)

Bittorrent.ConnectionListener:
- maximum connection limit per torrent, calculated from a global limit (and shared, like the bandwidth limit)

Bittorrent.ConnectionPool:
- some kind of backoff if a connect attempt fails (first retry in 1 minute, then 2 minutes, 4, 16, ...)

Bittorrent.MultiBt:
- only load a certain number of torrents at the same time (number should be configurable)
- add some kind of scheduling?

Bittorrent.Torrent:
- add more sanity checks for the torrents content

Bittorrent.TrackerRequester:
- change the number of requested peer adresses depending on the number of already connected peers
- don't ask for peers when stopping

InfoPanel:
- fix weird wrapping of text with wxPython 2.8
- add more sizing support

Logger:
- make max log size and number of kept logs configurable

TorrentStats:
- add some kind of "bar", which shows the availability for each piece. Perhaps optional, depends on resource usage.


Won't fix
-----------------------
1. Setting and clearing the "interest" flag:
PyBit doesn't adjust the interest flag upon reguesting things. So if the only block, which peer A has but we don't, is block 40, we will leave the interested flag on (which means that we request an unchoke from peer A), regardless if all parts of block 40 are already requested from another peer (or even peer A).
This does mean, that if peer A unchokes us, that we don't have anything to request from it. The alternative would be to unset the interest flag in such situations. But this would require way more checking to determine for each connection if the flag should be unset whenever a full block is requested, and it would require another full round of checking once someone chokes us or once a connection fails.
So this would increase CPU usage and cause lots of small messages to be send, especially because many clients send unchoke and choke messages directly after each other (either the clients are buggy or i2ps latency causes this, probably the later).
Another problem is, that at least PyBit expects peers to keep the interest flag set, until all requests are actually send! So setting the interest flag based upon what we can request, instead of the current version (based upon what we have), would break things (the outrequest list gets cleared, once the remote interest flag gets unset).
So it is probably not worth the cost and would probably cause problems to no end.
