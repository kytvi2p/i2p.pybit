0.2.3 - 16.09.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.ConnectionListener": The listening socket wasn't closed when terminating PyBit (harmless because it was implicitly closed but explicit is better)
- fixed bug in "Config": callbacks were called with encoded option values (essentially strings) instead of the real value
- renamed "Logger.py" to "LogController.py": The class is called "LogController", so the file should be called the same.
- renamed "HttpRequest" to "HttpResponseParser": More consistent that way, after all it parses responses, not requests.
- improved "HttpRequest" slightly: Header key preference was backwards in one case (content-length / transfer-encoding), other small changes
- updated PySamLib from v0.2.5 to v0.2.6


0.2.2 - 13.09.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.ConnectionHandler": Corrupted bitfield messages could get handled and cause crashes, added sanity check to prevent this.
- fixed bug in "Config": Unicode data wasn't handled at all, so any unicode string which contained non-ascii chars couldn't be stored (matters for default paths).
- changed "Bittorrent.ConnectionHandler": Show availability and number of assigned uploads in brackets for each piece index in the "Offered Pieces" column.
- changed "PyBit": Increased default tunnel count from 2 to 3 and decreased default length variance from 1 to 0.
- changed "TorrentCreateDialog": Removed "tracker.postman.i2p" as a choice in the tracker box, added "tracker2.postman.i2p" and "tracker.thepiratebay.i2p"

ThePirateBay (@forum.i2p, thanks for finding these and creating patches for them):
- fixed bug in "Bittorrent.HttpRequest": PyBit sent the full url in the HTTP GET request header which fails for some http servers. Now the relative url gets send.
- fixed bug in "Bittorrent.Measure": While calculating the average rates a ZeroDivision Error could occur if the time duration was zero.


0.2.1 - 30.08.2009
-----------------------
Blub:
- fixed bug in "Gui": Minimum window size for the splitter wasn't set, thus you could completly hide the main torrent list or the status panels below, without any chance to get them back without restarting PyBit.
- fixed inconsistency in "ConfigDialog" and "Conversion": Sometimes bytes/kilobytes/megabytes/... were reffered to as b/kb/mb, sometimes as B/Kb/Mb and so on. Now its B/KB/MB everywhere.
- added "Bittorrent.SuperSeedingHandler": This class handles the assignment of pieces to peers when superseeding. To add support for superseeding I also changed some things in "Bittorrent.ConnectionHandler", "Bittorrent.PieceStatus", "Bittorrent.Choker" and in a few other classes.
- changed "Gui": Removed the "Torrent" menu item, moved the "Add from file" and "Create torrent" items to the "File" menu item. Added support for adding multiple torrents at once (by selecting multiple torrents in the "Add from file" dialog).
- changed "TorrentConnectionList": Added the column "Offered Pieces" which shows the pieces which are currently available to a peer (when superseeding).
- changed "TorrentList": Added the column "Superseeding" which simply shows if superseeding is activated for a torrent. Also added an right-click menu with the usual options from the old "Torrent" menu item and with a new option to enable/disable superseeding.
- improved "VirtualListCtrl": When adding a torrent via the right-click menu, it appears to the right side of the column on which the right-click menu was opened.
- updated PySamLib from v0.2.4 to v0.2.5


0.2.0 - 09.08.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.Bencoding": bools got wrongly encoded, this bug wasn't triggered up to now because none of the persisted data structures contained bools.
- fixed bug in "Bittorrent.Requester": When a piece download failed (checksum error) a crash could occur in certain cases.
- added support for prioritising files
- added support for only downloading some files of a torrent
- added 'files' panel: Shows the files of the selected torrent, can be used to adjust the priority of the files and to decide which files should be downloaded
- added 'requests' panel: Shows all running requests of a torrent
- added 'tracker' panel: Shows all trackers which are used for a torrent
- added support for persisting some GUI changes: The size and order of all columns gets persisted, along with the information which columns should be shown and which not. This applies to all list-dialogs within PyBit (=the torrent list and the Connections/Files/Requests/Tracker panels)
- added a few new columns to the main torrent list and the 'Connections' panel, most are hidden per default
- some small GUI improvements: If a list-dialog gets differently sorted or if in general the order of its items changes, the selected item stays the same (previously the position of the selection stayed the same and thus a different item could get selected)
- fixed a small memory leak in the logging system: Different instances of the same Bittorrent.* class now always use the same logger instance. Previously the instance for each torrent got its own logger which leaks a bit of memory because logger instances never get released/GCed.


0.1.3 - 16.05.2009
-----------------------
Blub:
- fixed bug in "VirtualListCtrl": Fixed possible refresh problem on Windows (rows didn't get deleted in all cases for example)
- improved "Bittorrent.Storage": Added support for sparse files


0.1.2 - 19.04.2009
-----------------------
Blub:
- fixed bug in "PyBit.py": errors couldn't be logged because of a missing import
- fixed bug in "ConfigCallback": A certain type of callback ("value-funcArgAll") was broken (and not used in the last few versions because of this)
- fixed bug in "Bittorrent.TrackerRequester": Invalid replies and failed requests with responses (got data from tracker but it was invalid etc.) caused too frequent retries, multiple tracker were incorrectly handled
- added "Bittorrent.HttpUtilities.py": This file contains a bunch of functions and regexes which help to handle tracker urls (I did some related changes to "Bittorrent.HttpRequester", "Bittorrent.HttpRequest" and "Bittorrent.TrackerRequester")
- added "Bittorrent.ExactRefillingQuotaLimiter" (in "Limiter.py"): Contrary to "Bittorrent.RefillingQuotaLimiter" this one does care for "odd units" (present if the given limit cannot be divided by the number of users). Not in use currently.
- added "Bittorrent.ManualQuotaLimiter" (in "Limiter.py"): A very simple but exact quota limiter, used by "Bittorrent.Choker"
- improved "Bittorrent.EventScheduler": Support changing already scheduled events further then possible up to now (needed to change the choke interval)
- improved "Bittorrent.Choker": Added support for configurable slot limits (global/per-torrent and normal/random) and a configurable choke interval (now one instance of the choker is used for all torrents instead of each torrent having its own instance, so a few other classes needed to be changed, mostly "Bittorrent.MultiBt" and "Bittorrent.Bt")
- added panel to "ConfigDialog": Added another panel ("Choker") to the config dialog for configuring all the choker related things.
- did a few minor layout changes and similiar things


0.1.1 - 10.04.2009
-----------------------
Blub:
- fixed bug in "VirtualListCtrl": finally fixed the flickering on Windows
- changed "ObjectPersister": prevent concurrent access to the db completely, not only on writes (prevents sqlite exceptions caused by locked databases and timeouts)
- added "Bittorrent.TorrentCreator": A base class for creating torrents, used by the class "TorrentCreateDialog"
- added "TorrentCreateDialog": A dialog for creating torrents
- did a few minor changes (for example changed the rounding of some values in the GUI)
- updated PySamLib from v0.2.3 to v0.2.4


0.1.0 - 17.03.2009
-----------------------
- splitted "Bittorrent.Connection" up into the class "Connection" (basic socket stuff) and "BtConnection" (bittorrent stuff)
- improved "Bittorrent.BtConnection": added request timeout (120 seconds for one request, thats more then plenty!)
- improved "ObjectPersister": added support for removing keys and getting a list of all keys or all matching a certain regex (needed for managing per-torrent persisted data); ensured that all queued jobs get processed before stop() returns
- added "Bittorrent.BtObjectPersister": handles loading, storing and so on of per-torrent data using an instance of "ObjectPersister" internally
- added "Bittorrent.PersistentStatus": same functionality as "Status" but in addition the information about piece availability can be persisted using "BtObjectPersister" and loaded again (needed for fast-resume)
- added support for fast-resuming and skipping file checks (added the above mentioned classes for that, changed things in "Bittorrent.MultiBt", "Bittorrent.Bt", "Bittorrent.Storage" and elsewhere)
- moved the startup of global classes (classes with only one instance, like "LogController" or "ThreadedObjectPersister") out of the GUI into "PyBit.py"
- many changes to piece status keeping and to the code which decides which piece should be requested (added class "Bittorrent.PieceStatus", removed "Bittorrent.GlobalStatus", changes to "Bittorrent.Requester", "Bittorrent.Request", ...)
- a few small bugfixes, a few small performance tweaks


0.0.10 - 06.03.2009
-----------------------
Blub:
- improved "Bittorrent.Choker": reduced CPU usage slightly
- improved "Bittorrent.GlobalStatus": reduced CPU usage for sorting piece lists (function "sortPieceList()", needed for deciding which piece should be requested)
- added "Profiler": a simple profiler which simply tracks how much time was spend inside each function, without considering if the time was spend processing, sleeping, waiting or doing something else. Contrary to cProfile and hotshot it supports profiling multiple threads.


0.0.9 - 03.03.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.Connection": the outrequests were stored in a deque instead of in a list, which sucked CPU time when requests were removed in the middle of the queue
- fixed bug in "Bittorrent.TrackerRequester": failed tracker requests with valid tracker responses (parsing didn't fail but the tracker reported a failure) didn't trigger a retry
- improved "Bittorrent.Connection": if requests for data are not yet send to the peer when it already chokes us again, the messages are deleted from the outgoing buffer; outrequests and inrequests are now stored in a way which can deal with much larger queues
- improved "Bittorrent.ConnectionHandler": reduced CPU usage slightly, changed structure of log messages to the one used in other classes, changed a few loglevels
- improved "Bittorrent.Requester": maximum requests per connection is no longer hardcoded but determined by a function of the connection object, added support for strict prioritisation by piece availability (less prioritisation of in progress pieces)
- addition to "Bittorrent.Bt": added functions which will later add and remove the callbacks of per-torrent classes, slightly reorganised functions for starting, pausing and stopping a torrent
- addition to "Bittorrent.Connection": added functions to calculate and get the maximum amount of outrequests (maximum depends on peer client)
- addition to "Bittorrent.Conversion.py": added function to convert peer id to client name
- addition to "Bittorrent.GlobalStatus": added function for sorting piece lists by priority, needed for strict prioritisation by piece availability
- addition to "ConfigDialog": added panel "Requester" for configuring all requester related config options
- addition to "TorrentConnectionList": added "id"- and "client"-column to "TorrentConnectionList"
- change in "Bittorrent.ConnectionHandler": changed max queued out requests to 256 (the old reason for a small limit is gone, 256 shouldn't cause performance problems)
- change in "Bittorrent.MultiBt": reduced out buffer size for i2p sockets from 32768b to 5120b (4096b for one block and another 1024b for message overhead and such)
- change in "Bittorrent.Requester": reduced request size from 16384b to 4096b
- updated PySamLib from v0.2.2 to v0.2.3


0.0.8 - 28.02.2009
-----------------------
Blub:
- updated PySamLib from v0.2.1 to v0.2.2 (solves a few bugs, some caused crashes)


0.0.7 - 23.02.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.HttpRequester": the http header was slightly malformed (double newline instead of one after each header line)
- fixed bug in "ConfigDialog": the combobox for the file loglevel contained a wrong loglevel: "Warning" was called "Warn"
- fixed bug in "Gui": the "ScrollableTextViewer" for "About->Show Readme" was called with the wrong filename - it showed the changelog instead (seriously, how did I manage to not notice this up to now?!)
- improved "Bittorrent.MultiBt": made failure messages more sensible, added code to pass on exceptions which are raised in torrent.load()
- improved "Bittorrent.Torrent": added sanity checks for tracker urls, raise custom "TorrentException"
- improved "Bittorrent.TrackerRequester": added support for tracker urls which do not contain the full i2p destination
- added "showWarningMessage()" and "showErrorMessage()" to "Utilities", both show a typical small dialog with a warning/error text
- changed "ConfigDialog": removed the "always on top" attribute
- updated PySamLib from v0.1.5 to v0.2.1, adapted the affected classes (because of function renames and such)


0.0.6 - 21.02.2009
-----------------------
Blub:
- fixed bug in "Bittorrent.Bt": transfer measurement wasn't stopped when the torrent was stopped, needlessly causing two events per second and torrent
- fixed bug in "Bittorrent.EventScheduler": rescheduling events to an earlier time didn't work (not done by PyBit up to now, so this bug wasn't triggered - still better to fix it)
- fixed bug in "Bittorrent.MultiBt": the callback for the ip and port of the SAM bridge was incorrectly configured, causing crashes if only the port was changed (in these cases it set the ip to the new port config value)
- fixed bug in "Bittorrent.TrackerRequester": responses without peers (because the tracker doesn't now any) were considered invalid and triggered a retry after 5 minutes
- fixed bug in "I2P_ConfigPanel": spaces in the display and session name were not removed (the protocol, which sam uses, uses spaces as delimiters within messages)
- fixed bug in "VirtualListCtrl": sorting by the peer column failed (the peer column is the only column which needs two data items, that wasn't considered when sorting)
- fixed bug in "TorrentConnectionList": when choosing another torrent in the main list, all items of the connection list were deleted: This is a pre virtual list relict, no longer needed and breaks things.
- improved "Bittorrent.ConnectionBuilder": added timeout (max 5 minutes from connect attempt to finished handshake exchange), limited maximum connect attempts to 10 per torrent
- improved "Bittorrent.ConnectionListener": added timeout (a peer has 5 minutes to send a full handshake, should be plenty ...)
- improved "Bittorrent.HtmlRequester": added request timeout
- improved "Bittorrent.TrackerRequester": only trigger retries if nothing parsable was received, reduced retry waittime to 1 minute, changed loglevels
- improved GUI refresh logic: don't even access hidden pages during refresh
- added a dialog which shows the readme file (About->Show Readme)
- changed the way connections are closed: all close() calls are now done with the keyword "forceClose=True", which means that PySamLib doesn't wait until all data is send before it closes the connection (prevents memory leaks if a connection gets permanently unsendable without failing - seen that in the past)


0.0.5 - 16.02.2009
-----------------------
Blub:
- removed wrong assertion in "ConnectionPool"
- improved "HttpRequester": added support for chunked transfer-encoding (needed because trackers might use it for large responses and cause it is required by http 1.1)


0.0.4 - 15.02.2009
-----------------------
Blub:
- improved one of the basic elements of the GUI (lists) by using a virtual ListCtrl instead of a ListView, which should reduce CPU usage for large torrent/connection lists
- actually disabled the old way of initialising the log system (caused PyBit to write another logfile)!
- added "--profile" commandline switch, enables profiling of PyBit
- added "PyBit.py", handles all the commandline parsing, profiling setup and printing of profiling statistics, starts the GUI from "Gui.py"
- fixed bug in "Bt": Once a torrent was stopped, it was never again fully started
- fixed bug in "Connection": data is now send without doing recursive calls to "_send" (with >~100 small messages queued this could cause RuntimeExceptions because the maximum recursion depth was reached)
- fixed bug in "Requester": endgame mode (the same data may be requested from different peers at the same time) was activated to early: It got activated once requests for all missing pieces existed, not once all pieces were fully requested
- fixed bug in "TrackerRequester": the raw byte count instead of the payload byte count got send to the tracker
- made "ObjectPersister" threaded: should keep the GUI responsive even if queue changes are stored to disk during heavy disk activity (because these changes are now stored async and not by the GUI thread)
- prevent two torrents with the same infohash to run at the same time: there is no point in downloading/seeding the same thing twice and it breaks things
- fixed GUI refresh (Windows only): For some reason Windows requires an extra call compared to Linux to really refresh the GUI (which adds flickering for added fun). Else changes won't appear, until you click on a row of the list. 
- fixed right-click popup menu (Windows only): For some reason Windows requires a different way of setup for the menu, without it an empty menu is displayed
- fixed annoying log message formating error (tried to insert a string where a number was expected: %d vs %s)


0.0.3 - 08.02.2009
-----------------------
Blub:
- fixed unicode handling within the GUI: Because of a stupid mistake any non-ascii char was causing errors!
- fixed a possible torrent encoding/decoding error


0.0.2 - 07.02.2009
-----------------------
Blub:
- failed IO (full disk, no permission to access file, ...) should now be handled and logged
- improved setup of the logging system, which can now handle both file and console logging (and the loglevel is configurable)
- all config options can now be changed without restarting PyBit
- added a few sanity checks
- fixed lots of small bugs, which weren't triggered in 0.0.1 because the relevant code wasn't yet used
- updated PySamLib from v0.1.4 to v0.1.5


0.0.1 - 30.01.2009
-----------------------
Blub:
- initial version